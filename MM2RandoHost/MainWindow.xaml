<Window x:Class="MM2RandoHost.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:MM2RandoHost"
        xmlns:converters="clr-namespace:MM2RandoHost.Converters"
        mc:Ignorable="d"
        AllowDrop="True"
        Title="MM2 Randomizer" Height="370" Width="403.259" Drop="Window_Drop" DragEnter="Window_DragEnter" DragLeave="Window_DragLeave">
    <Window.Resources>
        <converters:InverseBooleanConverter x:Key="inverseBooleanConverter"/>
        <Style x:Key="placeHolder" TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Grid>
                            <TextBox Text="{Binding Path=Text,
                                                RelativeSource={RelativeSource TemplatedParent}, 
                                                Mode=TwoWay,
                                                UpdateSourceTrigger=PropertyChanged}"
                                 x:Name="textSource" 
                                 Background="Transparent" 
                                 Panel.ZIndex="2" />
                            <TextBox Text="{TemplateBinding Tag}" Background="{TemplateBinding Background}" Panel.ZIndex="1">
                                <TextBox.Style>
                                    <Style TargetType="{x:Type TextBox}">
                                        <Setter Property="Foreground" Value="Transparent"/>
                                        <Setter Property="BorderThickness" Value="0"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=Text, Source={x:Reference textSource}}" Value="">
                                                <Setter Property="Foreground" Value="Gray"/>
                                                <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                                <Setter Property="VerticalContentAlignment" Value="Center"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBox.Style>
                            </TextBox>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <Grid>
            <Grid.Resources>
                <Style TargetType="TextBlock">
                    <Setter Property="VerticalAlignment" Value="Center"/>
                    <Setter Property="Margin" Value="4"/>
                </Style>

                <Style TargetType="TextBox">
                    <Setter Property="VerticalAlignment" Value="Center"/>
                    <Setter Property="Margin" Value="2"/>
                    <Setter Property="Background" Value="#CCDDDD"/>
                </Style>

                <Style TargetType="CheckBox">
                    <Setter Property="VerticalAlignment" Value="Center"/>
                    <Setter Property="Margin" Value="2"/>
                </Style>

                <Style TargetType="RadioButton">
                    <Setter Property="VerticalAlignment" Value="Center"/>
                    <Setter Property="Margin" Value="2"/>
                </Style>
                <Style TargetType="Button">
                    <Setter Property="Margin" Value="3"/>
                </Style>
            </Grid.Resources>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="180"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="50"/>
                <RowDefinition Height="40"/>
                <RowDefinition Height="40"/>
                <RowDefinition Height="60"/>
                <RowDefinition/>
            </Grid.RowDefinitions>

            <Image x:Name="image" HorizontalAlignment="Left" Height="68" Margin="84,0,0,0" VerticalAlignment="Top" Width="223" Source="Resources/MM2rando.png" Grid.ColumnSpan="2" Grid.RowSpan="2"/>

            <StackPanel Orientation="Vertical" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.ColumnSpan="2"/>

            <DockPanel Grid.Row="2" HorizontalAlignment="Stretch">
                <TextBlock Text="Seed:" DockPanel.Dock="Left"/>
                <TextBox HorizontalAlignment="Stretch" x:Name="tbxSeed" Style="{StaticResource placeHolder}" Tag=" Leave Blank for Random" Text="{Binding SeedString, UpdateSourceTrigger=PropertyChanged}" Drop="TextBox_Drop" PreviewDragOver="TextBox_PreviewDragOver" BorderThickness="1"/>
            </DockPanel>

            <!-- Re-enable this for users to provide their own roms -->
            <Border x:Name="border" Grid.Row="1" Grid.ColumnSpan="2" Visibility="Hidden" IsEnabled="False" HorizontalAlignment="Stretch" BorderThickness="3">
                <DockPanel >
                    <Button Width="24" Margin="5,6" x:Name="btnBrowse" Click="btnBrowse_Click">
                        <TextBlock Text="..."/>
                    </Button>
                    <TextBox HorizontalAlignment="Stretch" x:Name="tbxSource" AllowDrop="True" Text="{Binding SourcePath, UpdateSourceTrigger=PropertyChanged}" Drop="TextBox_Drop" PreviewDragOver="TextBox_PreviewDragOver"/>
                </DockPanel>
            </Border>


            <GroupBox Grid.Row="3" Header="Randomize Options" BorderThickness="2" BorderBrush="DarkGray" VerticalAlignment="Top" Margin="0,1,0,0">
                <StackPanel Orientation="Vertical" Margin="4">
                    <CheckBox x:Name="chk8Stages" Content="Robot Master Stages" IsChecked="{Binding Is8StagesRandom}" Visibility="Collapsed"/>
                    <CheckBox x:Name="chkWeaponBehave" Content="Weapon Behavior" IsChecked="{Binding IsWeaponBehaviorRandom}" Visibility="Collapsed"/>
                    <CheckBox x:Name="chkWeakness" Content="Boss Weaknesses" IsChecked="{Binding IsWeaknessRandom}" Visibility="Collapsed"/>
                    <RadioButton x:Name="radWeaknessEasy" Margin="16,2,2,2" Content="Easy" 
                         IsEnabled="{Binding IsChecked, ElementName=chkWeakness, TargetNullValue=false}"
                         IsChecked="{Binding IsWeaknessEasy}" Visibility="Collapsed"/>
                    <RadioButton x:Name="radWeaknessHard" Margin="16,2,2,2" Content="Chaos" 
                         IsEnabled="{Binding IsChecked, ElementName=chkWeakness, TargetNullValue=false}"
                         IsChecked="{Binding IsWeaknessHard}" Visibility="Collapsed"/>
                    <CheckBox x:Name="chkBossAI" Content="Boss AI" IsChecked="{Binding IsBossAIRandom}" Visibility="Collapsed"/>
                    <CheckBox x:Name="chkWeapons" Content="Weapon Get" IsChecked="{Binding IsWeaponsRandom}" Visibility="Collapsed"/>
                    <CheckBox x:Name="chkItems" Content="Items 1, 2, and 3 Get" IsChecked="{Binding IsItemsRandom}"  Visibility="Collapsed"/>
                    <CheckBox x:Name="chkTeleporters" Content="Wily 5 Teleporters" IsChecked="{Binding IsTeleportersRandom}" IsEnabled="True"  Visibility="Collapsed"/>
                    <CheckBox x:Name="chkEnemies" Content="Enemies" IsChecked="{Binding IsEnemiesRandom}"  Visibility="Collapsed"/>
                    <CheckBox x:Name="chkColors" Content="Colors" IsChecked="{Binding IsColorsRandom}"  Visibility="Collapsed"/>
                    <CheckBox x:Name="chkBGM" Content="Stage BGM" IsChecked="{Binding IsBGMRandom}"  Visibility="Collapsed"/>
                    <CheckBox x:Name="chkWeaponNames" Content="Weapon Names" 
                      IsEnabled="{Binding IsChecked, Converter={StaticResource inverseBooleanConverter}, ElementName=chkJapanese, TargetNullValue=false}"
                      IsChecked="{Binding IsWeaponNamesRandom}" Visibility="Collapsed"/>
                    <CheckBox x:Name="chkJapanese" Content="J-Version (Rockman 2)" IsEnabled="False" IsChecked="{Binding IsJapanese}" Checked="chkJapanese_Checked" Visibility="Collapsed"/>
                    <TextBlock Foreground="#555555" FontStyle="Italic"><Run Text="Under Construction"/></TextBlock>
                </StackPanel>
            </GroupBox>

            <GroupBox Grid.Row="4" Header="Settings" BorderThickness="2" BorderBrush="DarkGray" VerticalAlignment="Top" >
                <StackPanel>
                    <CheckBox x:Name="chkFastText" Content="Faster Text" IsChecked="{Binding FastText}" IsEnabled="False"/>
                    <CheckBox x:Name="chkBurstChaser" Content="Burst Chaser Mode" IsChecked="{Binding BurstChaserMode}" Checked="chkBurstChaser_Checked"/>
                </StackPanel>
            </GroupBox>

            <StackPanel Grid.Row="2" Grid.Column="1" Grid.RowSpan="3" Orientation="Vertical">
                <Button x:Name="btnCreateROM" Click="btnCreateROM_Click" Height="30" Margin="3,8,3,3" Content="Generate Rom"/>
                <Button x:Name="btnOpenFolder" Click="btnOpenFolder_Click" Height="30" Content="Open Containing Folder"/>

                <Border Background="DarkGray" Margin="3">
                    <TextBlock Height="118" Margin="3" TextWrapping="WrapWithOverflow">
                        <TextBlock.Style>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="Text" Value=""/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsMouseOver, ElementName=chk8Stages}" Value="True">
                                        <Setter Property="Text" Value="Shuffle the destination of each Robot Master portrait on the Stage Select screen."/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding IsMouseOver, ElementName=chkWeaponBehave}" Value="True">
                                        <Setter Property="Text" Value="Change movement properties and ammo consumption of special weapons."/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding IsMouseOver, ElementName=chkWeakness}" Value="True">
                                        <Setter Property="Text" Value="Shuffle the damage done by each weapon to each Robot Master and Wily stage boss."/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding IsMouseOver, ElementName=radWeaknessEasy}" Value="True">
                                        <Setter Property="Text" Value="Weapons remain as effective against bosses as they do in the original game."/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding IsMouseOver, ElementName=radWeaknessHard}" Value="True">
                                        <Setter Property="Text" Value="Weapon damage is more random, and overall lower than the average in the original game."/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding IsMouseOver, ElementName=chkBossAI}" Value="True">
                                        <Setter Property="Text" Value="Change movement and attack properties of Robot Masters."/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding IsMouseOver, ElementName=chkWeapons}" Value="True">
                                        <Setter Property="Text" Value="Shuffle which weapon is obtained from defeating each Robot Master."/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding IsMouseOver, ElementName=chkItems}" Value="True">
                                        <Setter Property="Text" Value="Shuffle which Item is received from defeating each Robot Master."/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding IsMouseOver, ElementName=chkTeleporters}" Value="True">
                                        <Setter Property="Text" Value="Shuffle the Robot Master fights in the teleporters of Wily stage 5."/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding IsMouseOver, ElementName=chkEnemies}" Value="True">
                                        <Setter Property="Text" Value="Randomize the enemy type for most enemy instances throughout the game."/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding IsMouseOver, ElementName=chkColors}" Value="True">
                                        <Setter Property="Text" Value="Randomly change the color palettes for Mega Man and each stage."/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding IsMouseOver, ElementName=chkBGM}" Value="True">
                                        <Setter Property="Text" Value="Randomly change the background music used for stages."/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding IsMouseOver, ElementName=chkWeaponNames}" Value="True">
                                        <Setter Property="Text" Value="Randomize the names and letters for each weapon."/>
                                    </DataTrigger>

                                    <DataTrigger Binding="{Binding IsMouseOver, ElementName=chkJapanese}" Value="True">
                                        <Setter Property="Text" Value="Use the Japanese ROM Rockman 2. NOTE: Will not have randomized Weapon Get messages or Title Screen changes."/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding IsMouseOver, ElementName=chkFastText}" Value="True">
                                        <Setter Property="Text" Value="On the Weapon Get screen, decrease the write-delay of each letter from 7 to 4 frames."/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding IsMouseOver, ElementName=chkBurstChaser}" Value="True">
                                        <Setter Property="Text" Value="Increase movement speed."/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                </Border>

            </StackPanel>
        </Grid>
    </Grid>
</Window>

